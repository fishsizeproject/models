[
  {
    "objectID": "Bayesian_inla.html",
    "href": "Bayesian_inla.html",
    "title": "Bayesian CPUE standardisation using INLA",
    "section": "",
    "text": "LTlang:Fisheries catches through time are usually correlated. Catch in one year is not independent of the catch in the previous year. In CPUE standardisation models we should ideally account for this autocorrelation. The GLM based models don’t really do that, despite being a popular approach. Therefore here we will develop and apply a different model which accounts for spatial and temporal correlation in our catches.\nIn this model we will estimate model parameters using approximate Bayesian inference as implemented in the INLA package. The approximate Bayesian inference runs much faster than full inference using MCMC approach and with INLA package it can be applied to a wide range of distributions. For a basic introduction into the Bayesian approach and why it is useful, check out these slides.\nThe slides and the model, together with a detailed description of all the modelling steps have been presented in the last lecture of the CPUE standardisation course, so we recommend you watch the lecture before applying the model. Also, before proceeding with CPUE standardisation, make sure you carefully assess and explore your data. We have prepared two courses and different scripts for data exploration, which you can find on our CPUE standardisation course webpage.\nThe model is coded in R language, so you will need R and RStudio to run it. If you need a brief introduction into R, check this introductory page from an online course on size based modelling."
  },
  {
    "objectID": "Bayesian_inla.html#ltlangmodel-code",
    "href": "Bayesian_inla.html#ltlangmodel-code",
    "title": "Bayesian CPUE standardisation using INLA",
    "section": "LTlang:Model code",
    "text": "LTlang:Model code\nLTlang:The main model code is available in this R markdown script and is demonstrated using this dataset from 22 years of commercial pikeperch (Sander lucioperca) catches in the Baltic Sea. You can download the model and modify the script according to your needs. Before you run the model you will need to install all the R packages, as is explained in this R script.\nTo look at the model code and outputs without having to run the code, you can click here. After applying the model you should be able to plot predicted CPUE and its uncertainty through time, like in the plot below."
  },
  {
    "objectID": "Bayesian_inla.html#ltlang-application-of-the-model",
    "href": "Bayesian_inla.html#ltlang-application-of-the-model",
    "title": "Bayesian CPUE standardisation using INLA",
    "section": "LTlang: Application of the model",
    "text": "LTlang: Application of the model\nLTlang:We are currently working on applying this model to CPUE standardisation of the long term data set from the Curonian Lagoon and Kaunas Water Reservoir in Lithuania. Stay tuned for more outputs. If you are interested to learn more, please contact us as lydekaipaliepus@gamtc.lt"
  },
  {
    "objectID": "curonian_mizer.html",
    "href": "curonian_mizer.html",
    "title": "LITH TITLE MIZER",
    "section": "",
    "text": "LITH TITLE MIZER\nAbout the model (Lithuanian)\nA link to the code\nA link for more info\nA link to the model"
  },
  {
    "objectID": "GLM_standardisation.html",
    "href": "GLM_standardisation.html",
    "title": "Standardising catch per unit effort (CPUE) using generalised linear models",
    "section": "",
    "text": "LT lang:Before proceeding with CPUE standardisation, first make sure you carefully assess and explore your data. We have prepared the courses and scripts for data exploration, which you can find on our CPUE standardisation course webpage.\nOne commonly used approach for CPUE data standardisation applies generalized linear models (GLM). Here we model all variables that could impact our catches and extract annual deviations and their uncertainty. From this we can plot a standardized time series of population abundance.\nIn this set of slides you will find main points about GLM based CPUE standardisation.\nFor examples on how this method has been applied to other stocks, see references here and here"
  },
  {
    "objectID": "GLM_standardisation.html#lt-langmodel-code",
    "href": "GLM_standardisation.html#lt-langmodel-code",
    "title": "Standardising catch per unit effort (CPUE) using generalised linear models",
    "section": "LT lang:Model code",
    "text": "LT lang:Model code\nWe have developed GLM based models for CPUE standardisation of five fish species in the Curonian Lagoon and Kaunas Water reservoir (Lithuania). To use our models you first need to convert your dataset into a format where each row corresponds to a unique entry indicating all catches per gear, mesh size, length, season, fishing trip or other variables you want to include in the model. You can use this code to covert your data table into a suitable format.\nTo apply our GLM based standardisation model you can use this code where you will apply generalized linear models with Tweedie distribution and assess important predictor variables. Once you extract annual residuals and associated uncertainty you can plot the time series, as in the image below. To look at the model code and outputs without having to run the code, you can click here."
  },
  {
    "objectID": "GLM_standardisation.html#modelio-taikymas",
    "href": "GLM_standardisation.html#modelio-taikymas",
    "title": "Standardising catch per unit effort (CPUE) using generalised linear models",
    "section": "Modelio taikymas",
    "text": "Modelio taikymas\nLT lang:To learn more about the application of this CPUE standardisation model to Kaunas Water Reservoir fish populations, you can read our publication in journal Fishes.\nYou can also watch this conference talk to learn more about this analysis.\nOnce you conduct your CPUE standardisation, you can use the standardised values in surplus production models, as explained on this website."
  },
  {
    "objectID": "growth_change.html",
    "href": "growth_change.html",
    "title": "Detecting changes in fish growth through time",
    "section": "",
    "text": "lt: Although temperature can have large impacts on fish growth, it can be hard to detect it in size and age data, due to inherent noise and variability in growth. To separate temperature signals from other growth variation we need model that will estimate temperature impacts on fish size at age. Here we develop such model and apply it to the long term fish growth observation dataset in Drūkšiai Lake in Lithuania. Drūkšiai lake presents a unique system because during 1994-2010 the lake served as nuclear power plant cooling lake and was heated by nearly 2C. Since 2010 the power plant has been closed and the lake temperature returned to natural levels. Nature Research Centre has been conducting long term monitoring of fish growth has been conducted in Drūkšiai Lake, and now we can use these datasets to estimate how temperature changes affected growth in five fish species."
  },
  {
    "objectID": "growth_change.html#lt-model-code",
    "href": "growth_change.html#lt-model-code",
    "title": "Detecting changes in fish growth through time",
    "section": "lt: Model code",
    "text": "lt: Model code\nlt: The model is in R environment and is applies Bayesian mixed models of length as a function of age, age squared, lifetime average temperature and the interaction between lifetime average temperature and age. The model code and output can be found here. The model estimates the intercept and slope of temperature effect on size at age. In this way we assess whether all ages growth faster or slower (sign and magnitude of the intercept) and whether temperature impacts are different for young versus older ages (sign and magnitude of the slope). You can see model predictions in the figure below."
  },
  {
    "objectID": "growth_change.html#lt-application-of-the-model",
    "href": "growth_change.html#lt-application-of-the-model",
    "title": "Detecting changes in fish growth through time",
    "section": "lt: Application of the model",
    "text": "lt: Application of the model\nlt: This model and its results have been presented at the ICES annual conference as an in September 2022 - see video here.\nIt also was presented at the 151st American Fisheries Society Annual Meeting in November 2021 - see video here\nIf you would like to suggest or implement new model modifications and publish them, please contact us at lydekaipaliepus@gamtc.lt\nPerch drawing by Amy Rose Coghlan"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Models for sustainable inland fisheries",
    "section": "",
    "text": "Šis projektas ir tinklapio sukūrimas buvo finansuotas iš Europos regioninės plėtros fondo lėšų pagal priemonės Nr. 01.2.2-LMT-K-718 veiklą “Mokslininkų iš užsienio pritraukimas vykdyti mokslinius tyrimus” ir projektą „Pažangūs modeliai, piliečių mokslas ir didieji duomenys tvariai vidaus vandenų maisto produkcijai ir ekosistemų paslaugoms“ (Numeris 01.2.2-LMT-K-718-02-0006)\nŠį puslapį ir jame pristatomus modelius sukūrė Asta Audzijonytė, Carl Smith, Catarina Silva, Eglė Jakubavičiūtė, Dalia Grendaitė, Max Lindmark, Freddie Heather, Stephen Midway ir Gustav Delius.\nKei jums iškilo klausimų arba jei turite pasiūlymų susisiekite su mumis adresu lydekaipaliepus@gamtc.lt\nPradėti naršyti modelių puslapius\nGrįžti atgal į projekto tinklapį."
  },
  {
    "objectID": "jabba_models.html",
    "href": "jabba_models.html",
    "title": "Surplus production models",
    "section": "",
    "text": "LTLANG: JABBA is a Bayesian State-Space Surplus Production Model framework developed by Winker et al. 2018.\nIt uses catch and relative abundance time series and requires prior information on a) the resilience parameter r (intrinsic rate of population increase), b) carrying capacity K and c) the relative initial biomass at the beginning of the time series.\nYou can find all information in the developers’ [vignette]"
  },
  {
    "objectID": "jabba_models.html#lt-model-code",
    "href": "jabba_models.html#lt-model-code",
    "title": "Surplus production models",
    "section": "lt: Model code",
    "text": "lt: Model code\nlt: Here is an example code of how we used JABBA for modeling five species in the Curonian Lagoon and Kaunas water reservoir (Lithuania)."
  },
  {
    "objectID": "jabba_models.html#ltapplication-of-the-model",
    "href": "jabba_models.html#ltapplication-of-the-model",
    "title": "Surplus production models",
    "section": "lt:Application of the model",
    "text": "lt:Application of the model\nlt:To learn more about surplus production modeling to Curonian Lagoon and Kaunas Water Reservoir fish stocks and results that could be of interest to managers, you can read this and this summary or or watch this and this conference talks."
  },
  {
    "objectID": "ML_fish_size.html",
    "href": "ML_fish_size.html",
    "title": "Estimating fish size classes using image classification and machine learning models",
    "section": "",
    "text": "lt: Here we present a simple approach to develop models for estimating fish size classes from images. We have prepared a scripts for data pre-processing and machine learning model development, which you can find on our Online course webpage.\nIn this publication you will find a detailed description of the method and a pilot case-study where we demonstrate potential use for estimating fish size classes from images without a speficied reference object. You can also find all the scripts used in the framework in our Github page."
  },
  {
    "objectID": "ML_fish_size.html#lt-model-code",
    "href": "ML_fish_size.html#lt-model-code",
    "title": "Estimating fish size classes using image classification and machine learning models",
    "section": "lt: Model code",
    "text": "lt: Model code\nlt: To use our models it is very important that fish size classes in your dataset are identified correctly, otherwise your model will not be very useful. You can upload images (in JPEG or PNG format) to your Google drive by size class (i.e. fish images of each size class per folder), following this directory structure:\ndataset\n|__ class5\n    |______ 100080576_f52e8ee070_n.PNG\n    |______ 14167534527_781ceb1b7a_n.PNG\n    |______ ...\n|__ class10\n    |______ 10043234166_e6dd915111_n.PNG\n    |______ 1426682852_e62169221f_m.PNG\n    |______ ...\n|__ class15\n    |______ 102501987_3cdb8e5394_n.PNG\n    |______ 14982802401_a3dfb22afb.PNG\n    |______ ...\n|__ ...\n\nTo apply our model you can use this code:\n\n\n\nOpen In Colab"
  },
  {
    "objectID": "ML_fish_size.html#lt-application-of-the-model",
    "href": "ML_fish_size.html#lt-application-of-the-model",
    "title": "Estimating fish size classes using image classification and machine learning models",
    "section": "lt: Application of the model",
    "text": "lt: Application of the model\nlt: You can also watch this talk for the “Online seminar: Recreational angling effort and engagement in the digital age” to learn more about this model."
  },
  {
    "objectID": "ML_fish_species.html",
    "href": "ML_fish_species.html",
    "title": "Machine learning based image collection, annotation and classification of fish species",
    "section": "",
    "text": "Čia bus vertimas\nOpen-source modular framework for large scale image storage, handling, annotation and automatic classification"
  },
  {
    "objectID": "ML_fish_species.html#modelis",
    "href": "ML_fish_species.html#modelis",
    "title": "Machine learning based image collection, annotation and classification of fish species",
    "section": "Modelis",
    "text": "Modelis\nčia bus vertimas\ndataset\n|__ perch\n    |______ 100080576_f52e8ee070_n.PNG\n    |______ 14167534527_781ceb1b7a_n.PNG\n    |______ ...\n|__ striped_bass\n    |______ 10043234166_e6dd915111_n.PNG\n    |______ 1426682852_e62169221f_m.PNG\n    |______ ...\n|__ trout\n    |______ 102501987_3cdb8e5394_n.PNG\n    |______ 14982802401_a3dfb22afb.PNG\n    |______ ...\n|__ ...\n\nTo apply our model you can use this code:"
  },
  {
    "objectID": "ML_fish_species.html#modelio-taikymas",
    "href": "ML_fish_species.html#modelio-taikymas",
    "title": "Machine learning based image collection, annotation and classification of fish species",
    "section": "Modelio taikymas",
    "text": "Modelio taikymas\nČia bus vertimas"
  },
  {
    "objectID": "models.html",
    "href": "models.html",
    "title": "Overview of models",
    "section": "",
    "text": "LT—- We have developed and applied a range of statistical and mechanistic models, which we used in our studies and are happy to share with others. We hope these models will be useful for fisheries research and management. The models are available for free non-commercial use, but please reference the original source (publications or this website).\n\n\nLITHUANIAN: Scientific monitoring and artisanal, commercial or recreational fish catch data is often used to assess population status and trends, but such data are usually complex and require careful standardisation. There are several approaches that can be used for CPUE standardisation and we present three potential models of increasing complexity."
  },
  {
    "objectID": "models.html#ltsurplus-production-models-for-stock-assessments",
    "href": "models.html#ltsurplus-production-models-for-stock-assessments",
    "title": "Overview of models",
    "section": "LT–Surplus production models for stock assessments",
    "text": "LT–Surplus production models for stock assessments\nLITHUANIAN: Surplus production (SP) models are commonly used to assess data-poor fish stocks and are based on time series of catches and population abundance index (such as standardised CPUE time series, from the models above). These models assume that fish population abundance depends on its regeneration rate, carrying capacity and catches. SP models have been successfully applied to many stocks and, despite their simple assumptions, often perform surprisingly well, assuming the population abundance and catch time series are reliable."
  },
  {
    "objectID": "models.html#lithuanian-fish-growth-models",
    "href": "models.html#lithuanian-fish-growth-models",
    "title": "Overview of models",
    "section": "LITHUANIAN Fish growth models",
    "text": "LITHUANIAN Fish growth models\nLITHUANIAN Fish growth and therefore body sizes are highly variable, as it depends on temperature, food availability and many other processes. Understanding and modelling how and why growth can change is therefore an important part of fisheries research."
  },
  {
    "objectID": "models.html#machine-learning-models-1",
    "href": "models.html#machine-learning-models-1",
    "title": "Overview of models",
    "section": "Machine learning models",
    "text": "Machine learning models\nLITHUANIAN: Machine learning (ML) enables rapid analyses of large image and datasets and is an important step to facilitate citizen science driven data collection techniques. During our project we have developed two machine learning models for fish species and size identification."
  },
  {
    "objectID": "models.html#satellite-data-analysis-1",
    "href": "models.html#satellite-data-analysis-1",
    "title": "Overview of models",
    "section": "Satellite data analysis",
    "text": "Satellite data analysis\nRemote sensing and satellite data is now being collected on high temporal and spatial resolution. However, it is often challenging to access and process these data. We have developed some models and tools to aid with satellite based water surface temperature and chlorophyll A data acquisition and analysis."
  },
  {
    "objectID": "models.html#size-based-ecosystem-models",
    "href": "models.html#size-based-ecosystem-models",
    "title": "Overview of models",
    "section": "Size based ecosystem models",
    "text": "Size based ecosystem models\nSize based community and ecosystem models represent a powerful tool to explore potential outcomes of different fisheries management strategies, species interactions, climate change and a lot more. In this project we are developing a size based model for the Curonian lagoon ecosystem.\n\n\n\n\n\n\n\n13. Sized based models for Curonian lagoon and Baltic Sea  Learn about the potential climate change impacts in the Baltic Sea, explore a basic Curonian lagoon model and understand key principles of size based modelling, as implemented in a R package mizer."
  },
  {
    "objectID": "satelite_chla.html",
    "href": "satelite_chla.html",
    "title": "Extracting and analysing optical water quality data from satellites",
    "section": "",
    "text": "Vandens kokybė yra svarbus aplinkos rodiklis. Tradiciniais metodais gaunama informacija apie vandens kokybę yra tiksli, tačiau šie metodai reikalauja daug žmogiškųjų ir piniginių išteklių, dėl to dažniausiai matavimai būna atliekami tik kai kuriuose telkiniuose. Be to matavimai būna taškiniai, nors didesniuose vandens telkiniuoe vandens kokybės parametrai gali skirtis skirtingose akvatorijos vietose.\nPalydoviniai duomenys gali padėti surinkti daugiau duomenų apie vandens telkinius. Naudodami palydovinę informaciją galime stebėti vandens parametrų pasiskirstymą visame vandens telkinyje bei gauti stebėjimų duomenis dažniau. Palydovai suteikia informaciją apie optines vandens savybes. Optiškai sudėtinguose vandens telkiniuose (t.y. gėlavandeniuose telkiniuose) gali būti stebimi trys vandens parametrai: chlorofilo-a pigmentas, randamas dumbliuose ir melsvabakterėse, suspenduota medžiaga, ir spalvotoji ištirpusi organinė medžiaga.\nŠiame dokumente apibūdinamas metodas skirtas biofizinės ežero klasės nustatymui. Šis metodas naudoja spektrinius vandens požymius, gautus iš Europos Kosmoso Agentūros (EKA) Copernicus Sentinel-2 misijos palydovų. Metodas yra paremtas mašininio mokymosi atsitiktinio miško algoritmu ir priskiria ežerui vieną iš keturių klasių:\n\nSkaidri klasė. Vandens skaidrumas yra didesnis nei 2 m vidutino gylio ir giliuose ežeruose ir didesnis nei 1,3 m sekliuose ežeruose. Taip pat šios klasės vandenyje stebima maža optiškai aktyvių medžiagų koncentracija, tad vandens spektras nėra jų paveiktas. Vandens skaidrumas šioje klasėje siejamas su gera ir labai gera ekologine vandens būkle, kaip nustatoma ir pagal Europos Sąjungos Bendrosios Vandens Politikos direktyvą.\nTarpinė klasė. Vandens skaidrumas yra geras arba labai geras, tačiau chlorofilo-a koncentracija yra kiek didesnė (tarp 7 ir 20 mg/m^3) nei skaidrioje klasėje, tad ši klasė gali būti siejama su lengvais dumblių ir melsvabaketerių žydėjimais.\nChla-klasė. Vandens skaidrumas yra mažesnis nei 2 m vidutino gylio ir giliuose ežeruose ir mažesnis už 1,3 m sekliuose ežeruose, o chlorofilo-a koncentracija dažniausiai yra aukštesnė nei 20 mg/m^3. Ši klasė siejama su vidutine, bloga ar labai bloga vandens kokybe.\nDrumsta klasė. Vandens skaidrumas yra mažesnis nei 2 m vidutino gylio ir giliuose ežeruose bei mažesnis nei 1,3 m sekliuose ežeruose, tačiau chlorofilo koncentracija yra panaši į tarpinės klasės koncentraciją, tad mažas vandens skaidrumas yra veikiau nulemtas aukštesnės spalvotosios ištirpusios medžiagos koncentracijos.\n\nDaugiau informacijos apie šį modelį rasite viešai prieinamoje Grendaitės and Stonevičiaus (2022) publikacijoje. Modelių tikslumas išbandymo etape skyrėsi tarp klasių: 27 % drumstai klasei, 70 % Chla-klasei, 81 % tarpinei klasei ir 85 % skaidriai klasei.\nČia pateiktas programinis kodas pritaiko ežero klasės nustatymo modelius, naudojant Sentinel-2 duomenis, prieinamus per Google Earth engine (GEE). Pateiktas kodas taip pat nufiltruoja netinkamus palydovinius duomenis bei pritaiko ežero klasės modelį."
  },
  {
    "objectID": "satelite_chla.html#modelis",
    "href": "satelite_chla.html#modelis",
    "title": "Extracting and analysing optical water quality data from satellites",
    "section": "Modelis",
    "text": "Modelis\nTam kad patogiai pasiekti ir apdoroti vandens klasių duomenis, mes sukūrėme du programinius kodus. Pagrindinis kodas leidžia pasiimti duomenis iš GEE paskyros ir yra parašytas Python programavimo kalba. Šis kodas yra prieinamas naudojantis Google Colaboratory aplinka. Google Colaboratory yra nemokama programavimo aplinka, kurioje jau yra įdiegtos įvairios Python bibliotekos. Kad galėtume pasiekti duomenų rinkinius per Google Earth Engine, reikalinga Google paskyra (jei Google paskyros neturite, ją susikurti galite eidami į nuorodą. Tuomet reikia užsiregistruoti Google Earth Engine. Ši registracija leidžia autorizuoti prisijungimą ir gauti prieigą prie GEE palydovinių duomenų.\nPo registracijos, naudokite programinį kodą, naudodami žemiau esančią nuorodą\n\n\n\n\n\nKai atidarote kodą, pasidarykite jo kopiją savo Google Diske (pasirinkite Failas ir tada Išsaugoti kopiją Diske). Savo kodo kopiją galite redaguoti ir keisti kaip jums patinka. Tolimesnės instrukcijos, kaip naudotis kodu, yra pateiktos pačiame kode. Tam kad atisiųsti vandens paviršiaus temperatūros duomenis, jums reikės paruošti jums reikalingų vietų koordinačių taškų dokumentą, pagal čia pateiktą pavyzdį. Be to jums į Google Colab aplinką reikės įkelti mašininio algoritmo modelius, kuriuos galite atsisiųsti čia (tačiau nepamirškite pirmiausia išpakuoti šiuos modelius iš .zip dokumento). Įvykdę Google Colaboratory kodą, atsiųsite temperatūros palydovinius duomenis kurie atrodys kaip čia pateiktas pavyzdys. Šiame pavyzdyje mes naudojame tris Lietuvos ežerus, bet jūs galite pridėti tiek ežerų ar taškų ežere kiek jums reikia. Tik nepamirškite nesirinkti taškų per daug arti prie kranto, ir arčiau nei 100 metrų vienas nuo kito (nes satelito raiška yra 100 metrų).\nKai jau turėsite dokumentą su palydoviniais duomenimis, naudokite šį R markdown kodą tam kad toliau apdoroti duomenis, sukurti tam tikrus paveikslus (kaip žemiau nurodytas pavyzdys) arba palyginti satelitų duomenis su monitoringo duomenimis. Šiame dokumente kartu su kodu yra pateikti ir palyginamieji monitoringo duomenys trims ežerams. Čia jūs galite pažiūrėti kaip atrodo šios programos sukurti rezultatai."
  },
  {
    "objectID": "satelite_chla.html#modelio-taikymas",
    "href": "satelite_chla.html#modelio-taikymas",
    "title": "Extracting and analysing optical water quality data from satellites",
    "section": "Modelio taikymas",
    "text": "Modelio taikymas\nŠis ežero vandens klasės ir kokybės nustatymo modelis gali būti pritaikytas didelio masto vandens kokybės stebėjimui. Tokie stebėjimai ir duomenų pasiekiamumas yra svarbūs siekiant ES misijos Atkurti mūsų vandenyną ir vandenis tikslų. Čia pateikti programiniai kodai ir modeliai taip pat gali būti taikomi moksliniuose tyrimuose, siekiant susieti vandens kokybės ir kitų biologinių parametrų ar žuvų gausumo duomenis. Tačiau yra svarbu atkreipti dėmesį į tai, kad modelis yra parengtas Lietuvos ir kitiems borealiniams ežerams ir jo pritaikymas tropikų ar savanų vandens telkiniams turėtų būti toliau vystomas ir tikrinamas."
  },
  {
    "objectID": "satelite_temp.html",
    "href": "satelite_temp.html",
    "title": "Extracting and analysing lake surface temperature data from satellites",
    "section": "",
    "text": "Vandens paviršiaus temperatūrą (PT) galima gauti iš Landsat misijos palydovų. Pirmasis Landsat palydovas buvo paleistas 1972 metais, tačiau temperatūros duomenys yra renkami tik nuo Landsat 4 palydovo paleidimo 1984 metais. Nuo šių metų, palydovai turi šiluminės infraraudonosios spinduliuotės jutiklį (ang. - thermal infrared sensor), kuriuo nustatoma ilgabangė Žemės skleidžiama energija, kurios intensyvumas priklauso nuo paviršiaus temperatūros.\nŠiuo metu Žemės orbitoje yra Landsat 8 (nuo 2013 m. kovo mėn.) ir Landsat 9 (nuo 2021 m. spalio mėn.) palydovai, kuriais gaunama informacija apie paviršiaus atspindį (ang. - reflectance) ir temperatūrą. Paprasčiausias būdas gauti palydovinę PT informacią yra naudojantis Google Earth engine (GEE) paslaugomis. Google Earch engine inegruoja algoritmą kuris pateikia paviršiaus temperatūros duomenis (Kelvinais) kiekvienai Landsat nuotraukos gardelei. ST algoritmas buvo sukurtas Ročesterio technologijos instituto (ang. - Rochester Institute of Technology (RIT)) ir NASA Reaktyvinio judėjimo laboratorija (ang. - Jet Propulsion Laboratory (JPL)) kartu su JAV Geologijos tarnybos programinės įrangos inžinieriais (Landsat 4-7 ir Landsat 8-9 produktų aprašymas). Temperatūros nustatymui algoritmas naudoja atspindžio duomenis iš kitų Landsat spektrinių juostų, šiluminės juostos, bei pagalbinius aukščio ir atmosferos duomenis. Tempeartūros duomenys pateikiami 100 m gardelėmis, o tai reiškia kad PT duomenis galima gauti net ir sąlyginai nedideliems ežerams. Landsat duomenys yra prieinami iki 76 laipsnių platumos. Daugiau apie Landsat 8 duomenų rinkinį galima rasti GEE nuorodoje."
  },
  {
    "objectID": "satelite_temp.html#modelis",
    "href": "satelite_temp.html#modelis",
    "title": "Extracting and analysing lake surface temperature data from satellites",
    "section": "Modelis",
    "text": "Modelis\nTam kad lengvai pasiekti vandens paviršiaus temperatūros duomenis, mes sukūrėme du programinius kodus. Pagrindinis kodas leidžia pasiimti duomenis iš GEE paskyros ir yra parašytas Python programavimo kalba. Šis kodas yra prieinamas naudojantis Google Colaboratory aplinka. Google Colaboratory yra nemokama programavimo aplinka, kurioje jau yra įdiegtos įvairios Python bibliotekos. Kad galėtume pasiekti duomenų rinkinius per Google Earth Engine, reikalinga Google paskyra (jei Google paskyros neturite, ją susikurti galite eidami į nuorodą. Tuomet reikia užsiregistruoti Google Earth Engine. Ši registracija leidžia autorizuoti prisijungimą ir gauti prieigą prie GEE palydovinių duomenų.\nPo registracijos, naudokite programinį kodą, naudodami žemiau esančią nuorodą\n\n\n\n\n\nKai atidarote kodą, pasidarykite jo kopiją savo Google Diske (pasirinkite Failas ir tada Išsaugoti kopiją Diske). Savo kodo kopiją galite redaguoti ir keisti kaip jums patinka. Tolimesnės instrukcijos, kaip naudotis kodu, yra pateiktos pačiame kode. Tam kad atisiųsti vandens paviršiaus temperatūros duomenis, jums reikės paruošti jums reikalingų vietų koordinačių taškų dokumentą, pagal čia pateiktą pavyzdį. Įvykdę Google Colaboratory kodą, atsiųsite temperatūros palydovinius duomenis kurie atrodys kaip čia pateiktas pavyzdys. Šiame pavyzdyje mes naudojame tik du taškus, bet jūs galite pridėti tiek taškų (eilučių) kiek jums reikia.\nKai jau turėsite dokumentą su palydoviniais duomenimis, naudokite šį R markdown kodą tam kad pašalinti duomenis iš debesuotų dienų, o taip pat duomenis iš galimai žemos kokybės Landsat 7 laiko eilutės (nuo 2018 iki 2022 metų). Šis kodas taip pat pateikia galimybes sukurti duomenų grafikus. Čia jūs galite pažiūrėti į šio duomenų filtravimo ir grafikų paruošimo rezultatus nenaudojant pateikto kodo."
  },
  {
    "objectID": "satelite_temp.html#modelio-taikymas",
    "href": "satelite_temp.html#modelio-taikymas",
    "title": "Extracting and analysing lake surface temperature data from satellites",
    "section": "Modelio taikymas",
    "text": "Modelio taikymas\nTo assess the quality of the satellite temperature data we will compare it with the monitoring data from 12 Lithuanian lakes, available from the Lithuanian Hydrometeorological Service (meteo.lt). We expect small differences because in situ monitoring points are close to the shore, whereas for satellite data we chose coordinates in the central part of lake. Because satellite data points very close to the shore (50 meters or less) will be influenced by the coastal surfaces, vegetation and terrain, it is important to only use points that are sufficiently far from the shore. Nevertheless, we can see that the correlation is very high with correlation coefficients usually higher than 0.9\nTam kad įvertinti palydovinių duomenų kokybę, mes galime palyginti palydoviniu duomenis su in situ atliktai matavimais. Tam panaudosime monitoringo duomenis 12-ai Lietuvos ežerų. Šiuose ežeruose yra įrengtos automatinės stotys, prižiūrimos Lietuvos hidrometeorologijos tarnybos (meteo.lt). Svarbu yra pabrėžti, kad monitoringo stotys yra įrengtos arti kranto, o palydovinių duomenų pasiekimui naudojame taškus esančius labiau centrinėje ežero akvatorijoje (daugiau nei 50 metrų nuo kranto). Pastarasis faktas yra svarbus, nes taip išvengiame kranto paviršių ir reljefo įtakos palydoviniams duomenims. Žemiau pateiktame paveiksle matome kad ežerų in situ išmatuotos ir palydovais įvertintos temperatūros yra labai panašios, o jų koreliacijos koeficientai ežerams paprastai viršija 0.9."
  },
  {
    "objectID": "surplus-production.html",
    "href": "surplus-production.html",
    "title": "Surplus production models",
    "section": "",
    "text": "Čia bus vertimas"
  },
  {
    "objectID": "surplus-production.html#modelis",
    "href": "surplus-production.html#modelis",
    "title": "Surplus production models",
    "section": "Modelis",
    "text": "Modelis\nlietuviškas vertimas čia"
  },
  {
    "objectID": "surplus-production.html#modelio-taikymas",
    "href": "surplus-production.html#modelio-taikymas",
    "title": "Surplus production models",
    "section": "Modelio taikymas",
    "text": "Modelio taikymas\nČia bus vertimas"
  },
  {
    "objectID": "temperature_growth.html",
    "href": "temperature_growth.html",
    "title": "Model to explore temperature impacts on fish growth",
    "section": "",
    "text": "lt: Fish growth is strongly dependent on temperature. In warmer conditions fish often growth faster as juveniles, mature at smaller sizes and are smaller as adults. This is known as the temperature size rule, as defined by David Atkinson in 1994.\n\n\n\n\n\nHowever, the mechanisms behind this growth remain unclear. In this model we propose that temperature size rule (TSR) emerges in response to both physiological changes (faster metabolism and intake) and growth and reproduction optimisation to changes in mortality. We develop a physiologically structured life history optimisation model and explore a range of parameters and scenarios under which TSR is likely to emerge. For a brief introduction into the model you can watch these slides or watch this conference talk."
  },
  {
    "objectID": "temperature_growth.html#lt-model-code",
    "href": "temperature_growth.html#lt-model-code",
    "title": "Model to explore temperature impacts on fish growth",
    "section": "lt: Model code",
    "text": "lt: Model code\nlt:The model is written in Microsoft Excel and R environment. All model code and details are available on this GitHub repository. The main model Excel file can also be downloaded here. In this Excel file you can modify temperature response parameters and their size dependency, optimise the model using Solver option built in Excel and see the resulting growth and reproduction curves, as shown in the figure below."
  },
  {
    "objectID": "temperature_growth.html#ltapplication-of-the-model",
    "href": "temperature_growth.html#ltapplication-of-the-model",
    "title": "Model to explore temperature impacts on fish growth",
    "section": "lt:Application of the model",
    "text": "lt:Application of the model\nlt: The open access publication presenting this model is published in a special issue of The Biological Bulletin. If you want to learn more about the role of temperature and oxygen on fish growth, please also check out this overview publication in the same special issue.\nThis model is easy to modify and explore, and you are welcome to use it in your research and teaching. If you would like to suggest or implement new model modifications and publish them, please contact us at lydekaipaliepus@gamtc.lt\n Seliava. Piešinio autorė Amy Rose Coghlan"
  },
  {
    "objectID": "to_do_list.html",
    "href": "to_do_list.html",
    "title": "TO DO list",
    "section": "",
    "text": "Why is our webiste https://fishsizeproject.github.io/models/ not updated once I push code updates? I can see them locally, but not online"
  },
  {
    "objectID": "to_do_list.html#section",
    "href": "to_do_list.html#section",
    "title": "TO DO list",
    "section": "",
    "text": "Asta: get chlorophyl A image"
  },
  {
    "objectID": "von-bertalanffy.html",
    "href": "von-bertalanffy.html",
    "title": "Models to explore and estiamte von-Bertalanffy growth curves",
    "section": "",
    "text": "Čia bus vertimas"
  },
  {
    "objectID": "von-bertalanffy.html#modelis",
    "href": "von-bertalanffy.html#modelis",
    "title": "Models to explore and estiamte von-Bertalanffy growth curves",
    "section": "Modelis",
    "text": "Modelis\nČia bus vertimas\nčia"
  },
  {
    "objectID": "von-bertalanffy.html#modelio-taikymas",
    "href": "von-bertalanffy.html#modelio-taikymas",
    "title": "Models to explore and estiamte von-Bertalanffy growth curves",
    "section": "Modelio taikymas",
    "text": "Modelio taikymas\nČia bus vertimas"
  },
  {
    "objectID": "Zero_inflated_model.html",
    "href": "Zero_inflated_model.html",
    "title": "Zero inflated model for CPUE standardisation",
    "section": "",
    "text": "LITH:Most fisheries datasets (scientific, commercial, recreational) have a lot of zero catches. These are fishing trips were no fish was caught. These zero catches are important but we need to fit appropriate models to accommodate them. Here we are introducing a model for zero inflated data. This model is coded in R language, so you will need R and RStudio to run it. If you need a brief introduction into R, check this introductory page from an online course on size based modelling.\nFor a basic introduction into the model and data, check out these slides. However, if you want to use the model we strongly recommend that you watch at least part 4 of our CPUE standardisation course, where the model and approach were presented in more detail.\nBefore proceeding with CPUE standardisation, first make sure you carefully assess and explore your data. We have prepared two courses and different scripts for data exploration, which you can find on our CPUE standardisation course webpage."
  },
  {
    "objectID": "Zero_inflated_model.html#lithmodel-code",
    "href": "Zero_inflated_model.html#lithmodel-code",
    "title": "Zero inflated model for CPUE standardisation",
    "section": "LITH:Model code",
    "text": "LITH:Model code\nLITH:The main model code is available in this R markdown script and is demonstrated using this dataset. You can download the model and modify the script according to your needs. To look at the model code and outputs without having to run the code, you can click here. After applying the model you should be able to plot predicted catches as a function of fishing time (or other estimate of effort) and month or season, like in the plot below."
  },
  {
    "objectID": "Zero_inflated_model.html#lith-application-of-the-model",
    "href": "Zero_inflated_model.html#lith-application-of-the-model",
    "title": "Zero inflated model for CPUE standardisation",
    "section": "LITH: Application of the model",
    "text": "LITH: Application of the model\nLITH:To better understand this model and its applications, we strongly recommend that you go through our CPUE standardisation course material, where we discuss different models and their strengths in greater detail. The course also explains how to simulate new datasets using estimated model parameters to assess the probability of obtaining as many zero entries as you have in your dataset (example output of these simulations is shown in the plot below)."
  }
]