[
  {
    "objectID": "GLM_standardisation.html",
    "href": "GLM_standardisation.html",
    "title": "Standardising catch per unit effort (CPUE) using generalised linear models",
    "section": "",
    "text": "EGLE: need to add Rmd scripts ::: {.content-visible when-profile=“english”}"
  },
  {
    "objectID": "GLM_standardisation.html#application-of-the-model",
    "href": "GLM_standardisation.html#application-of-the-model",
    "title": "Standardising catch per unit effort (CPUE) using generalised linear models",
    "section": "Application of the model",
    "text": "Application of the model\nTo learn more about the application of this CPUE standardisation model to Kaunas Water Reservoir fish populations, you can read our publication in journal Fishes.\nYou can also watch this conference talk to learn more about this analysis.\nOnce you conduct your CPUE standardisation, you can use the standardised values in surplus production models, as explained on this website.\n:::"
  },
  {
    "objectID": "growth_change.html",
    "href": "growth_change.html",
    "title": "Detecting changes in fish growth through time",
    "section": "",
    "text": "Left: Drūkšiai Lake, LithuaniaRight: Water temperature timeseries"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Models for sustainable inland fisheries",
    "section": "",
    "text": "This is a webpage of models developed during the project “Advanced models, citizen science and big data for sustainable food production and ecological services of inland aquatic ecosystems”. The project has received funding from European Regional Development Fund (project No 01.2.2-LMT-K-718-02-0006) under grant agreement with the Research Council of Lithuania (LMTLT).\nThis page and models presented here have been created by Asta Audzijonyte, Carl Smith, Catarina Silva, Egle Jakubavičiūtė, Dalia Grendaitė, Max Lindmark, Freddie Heather, Steve Midway and Gustav Delius.\nIf you have questions and suggestions please contact us at lydekaipaliepus@gamtc.lt\nStart exploring models\nGo back to the project website."
  },
  {
    "objectID": "jabba_models.html",
    "href": "jabba_models.html",
    "title": "Surplus production models",
    "section": "",
    "text": "EGLE: need to add Rmd scripts"
  },
  {
    "objectID": "models.html#size-based-ecosystem-models",
    "href": "models.html#size-based-ecosystem-models",
    "title": "Overview of models",
    "section": "Size based ecosystem models",
    "text": "Size based ecosystem models\nSize based community and ecosystem models represent a powerful tool to explore potential outcomes of different fisheries management strategies, species interactions, climate change and a lot more. In this project we are developing a size based model for the Curonian lagoon ecosystem."
  },
  {
    "objectID": "mqmf.html",
    "href": "mqmf.html",
    "title": "MQMF",
    "section": "",
    "text": "About the model\nA link to the code\nA link for more info\nA link to the model"
  },
  {
    "objectID": "scripts/BayesianINLA.html",
    "href": "scripts/BayesianINLA.html",
    "title": "R code for Bayesian CPUE time series standardisation using INLA",
    "section": "",
    "text": "Note that we are using a data file that has already been explored and modified to remove outliers. Read the introduction to the model to see where to find the original data file and explanation on data exploration"
  },
  {
    "objectID": "scripts/BayesianINLA.html#data-exploration",
    "href": "scripts/BayesianINLA.html#data-exploration",
    "title": "R code for Bayesian CPUE time series standardisation using INLA",
    "section": "Data exploration",
    "text": "Data exploration\n\nCheck outliers\nThe plots below suggest that there are no outliers in the dataset\n\n\n\n\n\n\n\nNormality and homogeneity of variance\nThe plots below show that as catches and effort increase, so does the variance. This suggest a departure from the homogeneity of variance."
  },
  {
    "objectID": "scripts/BayesianINLA.html#fit-increasingly-complex-models",
    "href": "scripts/BayesianINLA.html#fit-increasingly-complex-models",
    "title": "R code for Bayesian CPUE time series standardisation using INLA",
    "section": "Fit increasingly complex models",
    "text": "Fit increasingly complex models\nWe start with an intercept only model. Catch is modelled as a function of year, whereas ‘rw1’ part imposes a temporal trend. We fit a gamma distribution using INLA. A gamma distribution is strictly positive (no zeros) and skewed (like our catch data)\n\n# Create a formula\nf1 <- Catch ~ + f(Year, model = \"rw1\")\n\n#fit a model\nI1 <- inla(f1, \n           control.compute = list(dic = TRUE), #estimate dic for model comparison\n           family = \"Gamma\",\n           data = zan)\n\n# Plot the time(year) trend\nYearsm <- I1$summary.random$Year\nFit1   <- I1$summary.fitted.values[,\"mean\"]\n\npar(mfrow = c(1,1), mar = c(5,5,2,2), cex.lab = 1.5)\nplot(Yearsm[,1:2], type='l',\n     xlab = 'Year', \n     ylab = 'Random walk trend',\n     ylim = c(-1, 1))\nabline(h=0, lty=3)\nlines(Yearsm[, c(1, 4)], lty=2)\nlines(Yearsm[, c(1, 6)], lty=2)\n\n\n\n\nThe result above shows that if we only look at one trend, we see decreasing catches through time. But effort also might have changed, so we need to include effort in the model.\n\n#create a formula with effort\nf2 <- Catch ~ Effort + f(Year, model = \"rw1\")\n\n#fit a model\nI2 <- inla(f2, \n           control.compute = list(dic = TRUE),\n           family = \"Gamma\",\n           data = zan)\n#compare two models using a criterion similar to AIC\nround(I1$dic$dic,0) #4179\n\n[1] 4179\n\nround(I2$dic$dic,0) #3532 <- including Effort improves fit\n\n[1] 3532\n\n#And plot the trend \nYearsm <- I2$summary.random$Year\nplot(Yearsm[,1:2], type='l',\n     xlab = 'Year', \n     ylab = 'Random walk trend',\n     ylim = c(-0.2, 0.2) )\nabline(h=0, lty=3)\nlines(Yearsm[, c(1, 4)], lty=2)\nlines(Yearsm[, c(1, 6)], lty=2)\n\n\n\n\nNow the trend is clearly different. This is because we are not including effort in the model, which is important. However, we also need to account for potentially different trends across months. So now we will nest month within a year\n\n#create a formula\nf3 <- Catch ~ Effort + \n  f(Year, \n    model = \"rw1\") +\n  f(Mon, \n    model = \"rw1\", cyclic = TRUE)  \n\n#fit the model\nI3 <- inla(f3, \n           control.predictor = list(compute = TRUE),\n           control.compute = list(dic = TRUE),\n           family = \"gamma\",\n           data = zan)\n\n#compare with the previous model \nround(I2$dic$dic,0) #3525\n\n[1] 3532\n\nround(I3$dic$dic,0) #3203 <- including month improves fit\n\n[1] 3203\n\n#plot the trend, but this time we plot it for years and months\nFit3 <- I3$summary.fitted.values[,\"mean\"]\n\npar(mfrow = c(1,2), mar = c(5,5,2,2), cex.lab = 1.5)\nYearsm   <- I3$summary.random$Year\nplot(Yearsm[,1:2], type='l',\n     xlab = 'Year', \n     ylab = 'Random walk trend',\n     ylim = c(-1, 1) )\nabline(h=0, lty=3)\nlines(Yearsm[, c(1, 4)], lty=2)\nlines(Yearsm[, c(1, 6)], lty=2)\n\nMonsm <- I3$summary.random$Mon\nplot(Monsm[,1:2], type='l',\n     xlab = 'MonthInYear', \n     ylab = '',\n     ylim = c(-4, 4) )\nabline(h=0, lty=3)\nlines(Monsm[, c(1, 4)], lty=2)\nlines(Monsm[, c(1, 6)], lty=2)\n\n\n\n\nWe can see that catches change a lot during the year and are low in summer months. So we definitely need to include month in the model. Since we have several stations, we probably also need to include stations in the model.\n\n# create a formula with station as a random term\nf4 <- Catch ~ Effort + \n  f(Year, \n    model = \"rw1\") +\n  f(Mon, \n    model = \"rw1\", cyclic = TRUE) +\n  f(fStn, model = \"iid\") \n\n#fit the model \nI4 <- inla(f4, \n           control.predictor = list(compute = TRUE),\n           control.compute = list(dic = TRUE),\n           family = \"Gamma\",\n           data = zan)\n\n#compare with the previous model \nround(I3$dic$dic,0) #3203\n\n[1] 3203\n\nround(I4$dic$dic,0) #2977 <- including station improves fit\n\n[1] 2977\n\n#Plot trend across years and months \nFit4 <- I4$summary.fitted.values[,\"mean\"]\n\npar(mfrow = c(1,2), mar = c(5,5,2,2), cex.lab = 1.5)\nYearsm   <- I4$summary.random$Year\nplot(Yearsm[,1:2], type='l',\n     xlab = 'Year', \n     ylab = 'Random walk trend',\n     ylim = c(-1, 1) )\nabline(h=0, lty=3)\nlines(Yearsm[, c(1, 4)], lty=2)\nlines(Yearsm[, c(1, 6)], lty=2)\n\nMonsm   <- I4$summary.random$Mon\nplot(Monsm[,1:2], type='l',\n     xlab = 'MonthInYear', \n     ylab = 'Random walk trend',\n     ylim = c(-3, 3) )\nabline(h=0, lty=3)\nlines(Monsm[, c(1, 4)], lty=2)\nlines(Monsm[, c(1, 6)], lty=2)"
  },
  {
    "objectID": "scripts/BayesianINLA.html#explore-the-best-model",
    "href": "scripts/BayesianINLA.html#explore-the-best-model",
    "title": "R code for Bayesian CPUE time series standardisation using INLA",
    "section": "Explore the best model",
    "text": "Explore the best model\nNow we look at the Bayesian residuals\n\n\n\n\n\n\n\n\n\n\n\nThese residuals look ok. However, if we fit residuals versus effort we see a strange non linear pattern, which suggests that the model does not fully fit. We will then plot it for each station and find that there seem to be different residual and therefore likely also CPUE trends in different stations.\n\n\n`geom_smooth()` using method = 'loess' and formula = 'y ~ x'\n\n\n\n\n\n`geom_smooth()` using method = 'loess' and formula = 'y ~ x'\n\n\n\n\n\nTo solve this problem we make station a fixed effect and add an interaction with effort to capture non-linearity. If different stations have different catch trends this interaction should be included. So we define a yet another model with Effort * fStn interaction and fit it.\n\n#define the model\nf5 <- Catch ~ Effort * fStn + \n  f(Year, \n    model = \"rw1\") +\n  f(Mon, \n    model = \"rw1\",\n        cyclic = T)\n#fit the model \nI5 <- inla(f5, \n           control.predictor = list(compute = TRUE),\n           control.compute = list(config = TRUE, dic = TRUE),\n           family = \"Gamma\",\n           control.family = list(link = \"log\"),\n           data = zan)\n\n#compare wit the previous model \nround(I4$dic$dic,0) #2977 \n\n[1] 2977\n\nround(I5$dic$dic,0) #2889 <- big improvement in fit...\n\n[1] 2889\n\n#plot trends \nFit5 <- I5$summary.fitted.values[,\"mean\"]\n\npar(mfrow = c(1,2), mar = c(5,5,2,2), cex.lab = 1.5)\nYearsm   <- I5$summary.random$Year\nplot(Yearsm[,1:2], type='l',\n     xlab = 'Year', \n     ylab = 'Random walk trend',\n     ylim = c(-1, 1) )\nabline(h=0, lty=3)\nlines(Yearsm[, c(1, 4)], lty=2)\nlines(Yearsm[, c(1, 6)], lty=2)\n\nMonsm   <- I5$summary.random$Mon\nplot(Monsm[,1:2], type='l',\n     xlab = 'MonthInYear', \n     ylab = 'Random walk trend',\n     ylim = c(-3, 3) )\nabline(h=0, lty=3)\nlines(Monsm[, c(1, 4)], lty=2)\nlines(Monsm[, c(1, 6)], lty=2)\n\n\n\n\nNow we look at the residuals of our new model\n\n# Get the fitted values and Pearson residuals\nN     <- nrow(zan)\nmu2   <- I5$summary.fitted.values[1:N,\"mean\"] \nr     <- I5$summary.hyperpar[\"Precision parameter for the Gamma observations\", \"mean\"]\nVarY2 <- mu2^2 / r\nE2    <- (zan$Catch - mu2) / sqrt(VarY2)\n\n# Plot residuals versus fitted values.\npar(mfrow = c(1, 1))\nplot(x = mu2, \n     y = E2,\n     xlab = \"Fitted values\",\n     ylab = \"Pearson residuals\")\nabline(h = 0, lty = 2, col = 1)\n\n\n\n# Plot residuals versus station\nboxplot(E2 ~ Station, \n        ylab = \"Pearson residuals\",\n        data = zan)\nabline(h = 0, lty = 2)\n\n\n\n# Year\nboxplot(E2 ~ Year, \n        ylab = \"Pearson residuals\",\n        data = zan)\nabline(h = 0, lty = 2)\n\n\n\n# Month\nboxplot(E2 ~ Month, \n        ylab = \"Pearson residuals\",\n        data = zan)\nabline(h = 0, lty = 2)\n\n\n\n# Residuals versus effort\nzan$E2 <- E2\n\nresplot2 <- ggplot() +\n  geom_point(data = zan, alpha = 0.4, size = 2,\n             aes(y = E2 ,  \n                 x = Effort)) +\n  geom_smooth(data = zan,                    \n              aes(y = E2, \n                  x = Effort)) +\n  xlab(\"Effort\") + ylab(\"Pearson residuals\") +\n  theme(text = element_text(size = 12), legend.position=\"none\") +\n  theme(axis.text.x = element_text(size = 11, angle = 45, hjust = 0.9)) +\n  My_theme +\n  geom_hline(yintercept = 0, col = 2)\nresplot2\n\n`geom_smooth()` using method = 'loess' and formula = 'y ~ x'\n\n\n\n\n\nThe final plot shows that the significant nonlinear pattern in residuals is mostly gone (uncertainty ranges include zero)."
  },
  {
    "objectID": "scripts/BayesianINLA.html#plot-model-outputs",
    "href": "scripts/BayesianINLA.html#plot-model-outputs",
    "title": "R code for Bayesian CPUE time series standardisation using INLA",
    "section": "Plot model outputs",
    "text": "Plot model outputs\nFirst we plots the overall temporal trend in years and months\n\n# Plot temporal effects\np1 <- bind_rows(\n  I5$summary.random$Year %>%\n    select(Year = 1, mean = 2, lcl = 4, ucl = 6) %>%\n    mutate(Model = \"rw1\")\n) %>%\n  ggplot(aes(x = Year, y = mean, ymin = lcl, ymax = ucl)) +\n  geom_ribbon(alpha = 0.2, fill = \"forestgreen\") +\n  geom_line(colour = \"forestgreen\") + My_theme +\n  geom_hline(yintercept=0, linetype=\"dashed\", \n             color = \"firebrick2\", size=0.4) +\n  ggtitle(\"Year\") +\n  theme(legend.position = \"none\")\nggplotly(p1)\n\n\n\n\np2 <- bind_rows(\n  I5$summary.random$Mon %>%\n    select(Mon = 1, mean = 2, lcl = 4, ucl = 6) %>%\n    mutate(Model = \"rw2\")\n) %>%\n  ggplot(aes(x = Mon, y = mean, ymin = lcl, ymax = ucl)) +\n  geom_ribbon(alpha = 0.2, fill = \"dodgerblue2\") +\n  geom_line(colour = \"dodgerblue2\") + My_theme +\n  geom_hline(yintercept=0, linetype=\"dashed\", \n             color = \"firebrick2\", size=0.4) +\n  ggtitle(\"Month within Year\") +\n  theme(legend.position = \"none\")\nggplotly(p2)"
  },
  {
    "objectID": "scripts/BayesianINLA.html#plot-catch-versus-effort",
    "href": "scripts/BayesianINLA.html#plot-catch-versus-effort",
    "title": "R code for Bayesian CPUE time series standardisation using INLA",
    "section": "Plot catch versus effort",
    "text": "Plot catch versus effort\nHere we plot the model output where we show catch as a function of effort for each station. Note that these predictions will be shown for one selected year (year 2002 in this case) and month (September), whereas data scatterplot shows the full data."
  },
  {
    "objectID": "scripts/BayesianINLA.html#plot-cpue-through-time",
    "href": "scripts/BayesianINLA.html#plot-cpue-through-time",
    "title": "R code for Bayesian CPUE time series standardisation using INLA",
    "section": "Plot CPUE through time",
    "text": "Plot CPUE through time\nNow we plot CPUE through time for a selected station (station 1) and selected effort level (20K), for all months"
  },
  {
    "objectID": "scripts/Hilsha.html",
    "href": "scripts/Hilsha.html",
    "title": "R code for hilsa (Tenualosa ilisha) CPUE data: zero inflated models",
    "section": "",
    "text": "Note that we are using a data file that has already been explored and modified to remove outliers. Read the introduction to the model to see where to find the original data file and explanation on data exploration"
  },
  {
    "objectID": "scripts/Hilsha.html#plot-model-outputs-and-parameters",
    "href": "scripts/Hilsha.html#plot-model-outputs-and-parameters",
    "title": "R code for hilsa (Tenualosa ilisha) CPUE data: zero inflated models",
    "section": "Plot model outputs and parameters",
    "text": "Plot model outputs and parameters\nWe plot model outputs to show predictions on how catches will depend on the number of days spent fishing and gillnet lengths.\n\n\n\n\n\n\n\n\nWe can also plot how catches depend on the trip length during different months and in different fishing areas."
  },
  {
    "objectID": "scripts/Hilsha.html#plot-model-parameter-estimates-in-a-publication-format",
    "href": "scripts/Hilsha.html#plot-model-parameter-estimates-in-a-publication-format",
    "title": "R code for hilsa (Tenualosa ilisha) CPUE data: zero inflated models",
    "section": "Plot model parameter estimates in a publication format",
    "text": "Plot model parameter estimates in a publication format\n\n\nRandom effect variances not available. Returned R2 does not account for random effects.\n\n\n\n\n\n \nNB GLM (Hilsha)\n\n\nCoeffcient\nLog-Mean\nConf. Int (95%)\nP-value\n\n\n(Intercept)\n2.49\n2.06 – 2.92\n<0.001\n\n\nArea [LowerMeghna]\n-0.11\n-0.48 – 0.26\n0.556\n\n\nArea [LowerPadma]\n-0.44\n-0.89 – 0.01\n0.056\n\n\nYrMonth [Oct92]\n0.38\n0.10 – 0.66\n0.007\n\n\nYrMonth [Sep92]\n-0.08\n-0.35 – 0.20\n0.596\n\n\nNlength\n0.00\n-0.00 – 0.00\n0.174\n\n\nTripDays\n0.41\n0.33 – 0.49\n<0.001\n\n\nObservations\n266\n\n\nR2 conditional / R2 marginal\nNA / 0.960"
  },
  {
    "objectID": "to_do_list.html",
    "href": "to_do_list.html",
    "title": "TO DO list",
    "section": "",
    "text": "Why is our webiste https://fishsizeproject.github.io/models/ not updated once I push code updates? I can see them locally, but not online"
  },
  {
    "objectID": "to_do_list.html#section",
    "href": "to_do_list.html#section",
    "title": "TO DO list",
    "section": "",
    "text": "Asta: get chlorophyl A image"
  }
]